// Copyright (c) 2019 Arista Networks, Inc.  All rights reserved.
// Arista Networks, Inc. Confidential and Proprietary.

syntax = "proto3";

package clouddeploy;
option go_package = "github.com/terraform-providers/terraform-provider-cloudeos/cloudeos/internal/api/clouddeploy_v1";

import "google/protobuf/field_mask.proto";
import "github.com/terraform-providers/terraform-provider-cloudeos/cloudeos/internal/time/time.proto";
import "google/protobuf/timestamp.proto";

/* Resource Router */

enum CloudProviderType {
    CP_UNSPECIFIED = 0;
    CP_AWS = 1;
    CP_AZURE = 2;
    CP_GCP = 3;
}

enum TopologyType {
    TOPO_UNSPECIFIED = 0;
    TOPO_CLOS = 1;
    TOPO_WAN = 2;
 }

enum UnderlayConnectionType {
    UL_NA = 0;
    UL_IGW = 1;
    UL_PEERING = 2;
    UL_TGW = 3;
}

enum OverlayConnectionType {
    OL_NA = 0;
    OL_DPS = 1;
    OL_VXLAN = 2;
    OL_IPSEC = 3;
}

enum RoleType {
    ROLE_UNSPECIFIED = 0;
    ROLE_EDGE = 1;
    ROLE_SPINE = 2;
    ROLE_LEAF = 3;
}

enum DeploymentStatusCode {
    // TF or any other client that invokes Router message
    // should inform about deployment status
    // of the router instance
    DEP_STATUS_UNSPECIFIED = 0;
    DEP_STATUS_IN_PROGRESS = 1;
    DEP_STATUS_SUCCESS = 2;
    DEP_STATUS_ERR = 3;
}

enum CVStatusCode {
    CV_STATUS_UNSPECIFIED = 0;
    CV_STATUS_RTR_CREATED = 1; // Rtr object is created. Waiting for router to start streaming
    CV_STATUS_RTR_DISCOVERED = 2; // Router is streaming, waiting for router to be provisioned
    CV_STATUS_RTR_PROVISIONED = 3; // Router is provisioned. It is in the undefined container
    CV_STATUS_RTR_CONFIG_WIP = 4; // A config is being applied to the router
    CV_STATUS_RTR_READY = 5; // Rtr is ready for futher action/operation
    CV_STATUS_RTR_FAILED = 6; // Rtr could not be created
    CV_STATUS_RTR_INACTIVE = 7; // Rtr stopped streaming after it is provisioned
}

enum DeviceStatusCode {
    DEVICE_STATUS_UNSPECIFIED = 0;
    DEVICE_STATUS_WORK_IN_PROGRESS = 1;
    DEVICE_STATUS_SUCCESS = 2;
    DEVICE_STATUS_ERROR = 3;
}

enum NetworkInterfaceType {
    INTF_TYPE_UNSPECIFIED = 0;
    INTF_TYPE_PRIVATE = 1;
    INTF_TYPE_PUBLIC = 2;
    INTF_TYPE_INTERNAL = 3;
}

message RouteTableIds {
    repeated string public = 1;
    repeated string private = 2;
    repeated string internal = 3;
    google.protobuf.FieldMask field_mask = 100;
}

message NetworkInterface {
    string intf_id = 1;
    string name = 2;
    NetworkInterfaceType intf_type = 3;
    repeated string private_ip_addr = 4;
    string public_ip_addr = 5;
    string subnet = 6;
    string security_group = 7;
    google.protobuf.FieldMask field_mask = 100;
}

message CVInfo {
    // CloudVision reports status of the deployment
    // using this message. This is ReadOnly for the
    // clients.
    CVStatusCode cv_status_code = 1;
    string bootstrap_cfg = 2;
    string ha_rtr_id = 3;
    repeated string peer_vpc_rt_table_id = 4;
    RouteTableIds ha_rt_table_ids = 5;
    string cv_status_desc = 6;
    string cv_status_recommended_action = 7;
    DeviceStatusCode device_status = 8;
    google.protobuf.FieldMask field_mask = 100;
}

message AzureRouterDetail {
    string avail_zone = 1;
    string res_group = 2;
    string instance_type = 3;
    string avail_set = 4;
    google.protobuf.FieldMask field_mask = 100;
}

message AwsRouterDetail {
    string avail_zone = 1;
    string instance_type = 2;
    google.protobuf.FieldMask field_mask = 100;
}

message Router {
    // name + vpc_id + cp_t will be used as primary key
    string name = 1;
    string vpc_id = 2;
    CloudProviderType cp_t = 3;
    string region = 4;

    string instance_id = 5;
    string ha_name = 6;
    string id = 7; // an ID can be generated by the client to track resource
    string cnps = 8; // CNPS tag that identifies vrf
    map<string, string> tags = 9; // Other tags that can be used in queries
    string device_enrollment_token = 10;
    RouteTableIds rt_table_ids = 11;
    bool route_reflector = 12;

    // Based upon cp_t, either one of the following two fields will be set
    AwsRouterDetail aws_rtr_detail = 13;
    AzureRouterDetail az_rtr_detail = 14;

    repeated NetworkInterface intf = 15;
    DeploymentStatusCode dep_status = 16;
    CVInfo cv_info = 17; // Field filled in by CVP. Client should never set this
    string device_serial_num = 18; // Field set by clouddeploy app for UI,
                                   //client should never set this

    google.protobuf.FieldMask field_mask = 100;
}

/*
 Service Router
 */

message AddRouterRequest {
    Router router = 1;
}

message AddRouterResponse {
    Router router = 1;
    google.protobuf.Timestamp created_at = 2;
}

message UpdateRouterRequest {
    Router router = 1;
}

message UpdateRouterResponse {
    Router router = 1;
    google.protobuf.Timestamp at_time = 2;
}

message DeleteRouterRequest {
    Router router = 1;
}

message DeleteRouterResponse {
}

message GetRouterRequest {
    Router router = 1;
    google.protobuf.Timestamp at_time = 2;
}

message GetRouterResponse {
    Router router = 1;
    google.protobuf.Timestamp at_time = 2;
}

message ListRouterRequest {
    repeated Router filter = 1;
    time.RequestAtTime at_time = 2;
    bool watch = 3;
    google.protobuf.FieldMask field_mask = 100;
}

message ListRouterResponse {
    Router router = 1;
    google.protobuf.Timestamp at_time = 2;
}

service Routers {
    rpc AddRouter (AddRouterRequest) returns (AddRouterResponse);
    rpc UpdateRouter (UpdateRouterRequest) returns (UpdateRouterResponse);
    rpc DeleteRouter (DeleteRouterRequest) returns (DeleteRouterResponse);
    rpc GetRouter (GetRouterRequest) returns (GetRouterResponse);
    rpc ListRouter (ListRouterRequest) returns (stream ListRouterResponse);
}

/* Resource TopologyInfo */

enum TopologyInfoType {
    TOPO_INFO_TYPE_UNSPECIFIED = 0;
    TOPO_INFO_META = 1; // Topology meta info
    TOPO_INFO_WAN = 2;
    TOPO_INFO_CLOS = 3;
}

enum FabricType {
    FABRIC_TYPE_UNSPECIFIED = 0;
    FULL_MESH = 1;
    HUB_SPOKE = 2;
}

message WanInfo {
    string wan_name = 1;
    CloudProviderType cp_type = 2;
    repeated string peer_names = 3;
    bool edge_edge_peering = 4;
    bool edge_edge_igw = 5;
    bool edge_dedicated_connect = 6; // DirectConnect
    string cvp_container_name = 7;
    google.protobuf.FieldMask field_mask = 100;
}

message ClosInfo {
    string clos_name = 1;
    CloudProviderType cp_type = 2;
    FabricType fabric = 3; // for Leaf connectivity
    bool leaf_edge_peering = 4; // VPC peering b/w leaf and edge
    bool leaf_edge_igw = 5; // IGW b/w leaf and edge
    bool leaf_encryption = 6; // IPSec b/w leaf and edge
    string cvp_container_name = 7;
    google.protobuf.FieldMask field_mask = 100;
}

message TopologyInfo {
    // Topology meta info
    string name = 1;
    string id = 2;
    TopologyInfoType topo_type = 3;
    uint32 bgp_asn_low = 4;
    uint32 bgp_asn_high = 5;
    string vtep_ip_cidr = 6; // CIDR block for VTEP IPs on vEOS
    string terminattr_ip_cidr = 7; // Loopback IP range on vEOS
    string dps_control_plane_cidr = 8; // Dps Control Plane IP Cidr
    repeated string managed_devices = 9; // Hostnames of existing vEOS instances
    string cvaas_domain = 10; //CVaaS Domain Name
    string cvaas_server = 11;

    WanInfo wan_info = 12;
    ClosInfo clos_info = 13;
    string version = 14;
    google.protobuf.FieldMask field_mask = 100;
}

/* Service TopologyInfo */

message AddTopologyInfoRequest {
    TopologyInfo topology_info = 1;
}

message AddTopologyInfoResponse {
    TopologyInfo topology_info = 1;
    google.protobuf.Timestamp created_at = 2;
}

message UpdateTopologyInfoRequest {
    TopologyInfo topology_info = 1;
}

message UpdateTopologyInfoResponse {
    TopologyInfo topology_info = 1;
    google.protobuf.Timestamp at_time = 2;
}

message DeleteTopologyInfoRequest {
    TopologyInfo topology_info = 1;
}

message DeleteTopologyInfoResponse {
}

message GetTopologyInfoRequest {
    TopologyInfo topology_info = 1;
    google.protobuf.Timestamp at_time = 2;
}

message GetTopologyInfoResponse {
    TopologyInfo topology_info = 1;
    google.protobuf.Timestamp at_time = 2;
}

message ListTopologyInfoRequest {
    repeated TopologyInfo filter = 1;
    time.RequestAtTime at_time = 2;
    bool watch = 3;
    google.protobuf.FieldMask field_mask = 4;
}

message ListTopologyInfoResponse {
    TopologyInfo topology_info = 1;
    google.protobuf.Timestamp at_time = 2;
}

service Topologyinfos {
    rpc AddTopologyInfo (AddTopologyInfoRequest) returns (AddTopologyInfoResponse);
    rpc UpdateTopologyInfo (UpdateTopologyInfoRequest) returns (UpdateTopologyInfoResponse);
    rpc DeleteTopologyInfo (DeleteTopologyInfoRequest) returns (DeleteTopologyInfoResponse);
    rpc GetTopologyInfo (GetTopologyInfoRequest) returns (GetTopologyInfoResponse);
    rpc ListTopologyInfo (ListTopologyInfoRequest) returns (stream ListTopologyInfoResponse);
}

/* Resource Vpc */

message AzureVnetInfo {
    repeated string nsg = 1;
    string resource_group = 2;
    string cidr = 3;
    repeated string avail_set = 4;
    repeated string peering_conn_id = 5;
    google.protobuf.FieldMask field_mask = 100;
}

message AwsVpcInfo {
    repeated string security_group = 1;
    string cidr = 2;
    string igw_id = 3;
    repeated string peering_conn_id = 4;
    google.protobuf.FieldMask field_mask = 100;
}

message PeerVpcInfo {
    map<string, string> peer_vpc_cidr = 1;
    string peer_rg_name = 2;
    string peer_vnet_name = 3;
    string peer_vnet_id = 4;
    google.protobuf.FieldMask field_mask = 100;
}

enum VpcStatusCode {
   VPC_STATUS_UNSPECIFIED = 0;
   VPC_STATUS_ADD_SUCCESS = 1;
   VPC_STATUS_ADD_FAILURE = 2;
}

message Vpc {
    // name + vpc_id + cp_t is the primary key
    string name = 1;
    string vpc_id = 2;
    CloudProviderType cp_t  = 3;
    string region = 4;
    string id = 5; // an ID can be generated by the client to track resource

    // Topology related attributes
    RoleType role_type = 6;
    string topology_name = 7;
    string clos_name = 8;
    string wan_name = 9;

    AzureVnetInfo az_vnet_info = 10;
    AwsVpcInfo aws_vpc_info = 11;
    string cnps = 12;
    bool route_reflector = 13;
    map<string, string> tags = 14; // Other tags that can be used in queries

    // Client should not set these attributes
    map<string, string> peer_vpc_cidr = 15; // mapping between vpc_id -> cidr
    VpcStatusCode status_code = 16; // Vpc creation status

    string account = 17; // account information
    PeerVpcInfo peer_vpc_info = 18;

    google.protobuf.FieldMask field_mask = 100;
}

/*
Service Vpc
*/

message AddVpcRequest {
    Vpc vpc = 1;
}

message AddVpcResponse {
    Vpc vpc = 1;
    google.protobuf.Timestamp created_at = 2;
}

message UpdateVpcRequest {
    Vpc vpc = 1;
}

message UpdateVpcResponse {
    Vpc vpc = 1;
    google.protobuf.Timestamp at_time = 2;
}

message DeleteVpcRequest {
    Vpc vpc = 1;
}

message DeleteVpcResponse {
}

message GetVpcRequest {
    Vpc vpc = 1;
    google.protobuf.Timestamp at_time = 2;
}

message GetVpcResponse {
    Vpc vpc = 1;
    google.protobuf.Timestamp at_time = 2;
}

message ListVpcRequest {
    repeated Vpc filter = 1;
    time.RequestAtTime at_time = 2;
    bool watch = 3;
    google.protobuf.FieldMask field_mask = 100;
}

message ListVpcResponse {
    Vpc vpc = 1;
    google.protobuf.Timestamp at_time = 2;
}

service Vpcs {
    rpc GetVpc (GetVpcRequest) returns (GetVpcResponse);
    rpc ListVpc (ListVpcRequest) returns (stream ListVpcResponse);
    rpc AddVpc (AddVpcRequest) returns (AddVpcResponse);
    rpc UpdateVpc (UpdateVpcRequest) returns (UpdateVpcResponse);
    rpc DeleteVpc (DeleteVpcRequest) returns (DeleteVpcResponse);
}

/* Resource Subnet */
message Subnet {
    string subnet_id = 1;
    CloudProviderType cp_t = 2;
    string id = 3; // an ID can be generated by the client to track resource
    string cidr = 4;
    string vpc_id = 5;
    string avail_zone = 6;
    string prim_gw = 7;
    string sec_gw = 8;
    google.protobuf.FieldMask field_mask = 100;
}

/*
Service Subnet
*/

message AddSubnetRequest {
    Subnet subnet = 1;
}

message AddSubnetResponse {
    Subnet subnet = 1;
    google.protobuf.Timestamp created_at = 2;
}

message UpdateSubnetRequest {
    Subnet subnet = 1;
}

message UpdateSubnetResponse {
    Subnet subnet = 1;
    google.protobuf.Timestamp at_time = 2;
}

message DeleteSubnetRequest {
    Subnet subnet = 1;
}

message DeleteSubnetResponse {
}

message GetSubnetRequest {
    Subnet subnet = 1;
    google.protobuf.Timestamp at_time = 2;
}

message GetSubnetResponse {
    Subnet subnet = 1;
    google.protobuf.Timestamp at_time = 2;
}

message ListSubnetRequest {
    repeated Subnet filter = 1;
    time.RequestAtTime at_time = 2;
    bool watch = 3;
    google.protobuf.FieldMask field_mask = 100;
}

message ListSubnetResponse {
    Subnet subnet = 1;
    google.protobuf.Timestamp at_time = 2;
}

service Subnets {
    rpc GetSubnet (GetSubnetRequest) returns (GetSubnetResponse);
    rpc ListSubnet (ListSubnetRequest) returns (stream ListSubnetResponse);
    rpc AddSubnet (AddSubnetRequest) returns (AddSubnetResponse);
    rpc UpdateSubnet (UpdateSubnetRequest) returns (UpdateSubnetResponse);
    rpc DeleteSubnet (DeleteSubnetRequest) returns (DeleteSubnetResponse);
}

/* Resource Paths */
message PathCharacteristics {
    uint64 latency_ms = 1;
    uint64 jitter_ms = 2;
    uint64 pkt_loss_pc = 3;
    uint64 bw_mbps = 4;
    bool up = 5;
    uint64 uptime = 6;
    google.protobuf.FieldMask field_mask = 100;
}

message Path {
    string src_vpc_cloud_id = 1;
    string src_vpc_name = 2;
    string src_vpc_uuid = 3;
    string local_rtr_cloud_id = 4;
    string local_rtr_name = 5;
    string local_rtr_uuid = 6;
    string local_intf_ip_addr = 7;
    string src_region = 8;
    CloudProviderType src_cp_t = 9;
    string dst_vpc_cloud_id = 10;
    string dst_vpc_name = 11;
    string dst_vpc_uuid = 12;
    string remote_rtr_cloud_id = 13;
    string remote_rtr_name = 14;
    string remote_rtr_uuid = 15;
    string remote_intf_ip_addr = 16;
    string dst_region = 17;
    CloudProviderType dst_cp_t = 18;
    string topology_name = 19;
    UnderlayConnectionType ul_t = 20;
    PathCharacteristics path_char = 21;
    google.protobuf.FieldMask field_mask = 100;
}

message GetPathRequest {
    Path path = 1;
    google.protobuf.Timestamp at_time = 2;
}

message GetPathResponse {
    Path path = 1;
    google.protobuf.Timestamp at_time = 2;
}

message ListPathRequest {
    repeated Path filter = 1;
    time.RequestAtTime at_time = 2;
    bool watch = 3;
    google.protobuf.FieldMask field_mask = 100;
}

message ListPathResponse {
    Path path = 1;
    google.protobuf.Timestamp at_time = 2;
}

service Paths {
    rpc GetPath (GetPathRequest) returns (GetPathResponse);
    rpc ListPath (ListPathRequest) returns (stream ListPathResponse);
}
